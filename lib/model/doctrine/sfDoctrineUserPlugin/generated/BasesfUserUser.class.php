<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BasesfUserUser extends sfDoctrineRecord
{
  public function setTableDefinition()
  {
    $this->setTableName('sf_user_user');
    $this->hasColumn('sf_guard_user_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('prefix', 'string', 5, array('type' => 'string', 'length' => 5));
    $this->hasColumn('first_name', 'string', 20, array('type' => 'string', 'length' => 20));
    $this->hasColumn('middle_name', 'string', 20, array('type' => 'string', 'length' => 20));
    $this->hasColumn('last_name', 'string', 20, array('type' => 'string', 'length' => 20));
    $this->hasColumn('suffix', 'string', 10, array('type' => 'string', 'length' => 10));
    $this->hasColumn('company', 'string', 45, array('type' => 'string', 'length' => 45));
    $this->hasColumn('date_of_birth', 'date', null, array('type' => 'date'));
  }

  public function setUp()
  {
    $this->hasMany('sfUserPhone as Phones', array('local' => 'id',
                                                  'foreign' => 'user_id'));

    $this->hasMany('sfUserAddress as Addresses', array('local' => 'id',
                                                       'foreign' => 'user_id'));

    $this->hasMany('sfUserEmailAddress as EmailAddresses', array('local' => 'id',
                                                                 'foreign' => 'user_id'));

    $this->hasMany('sfUserImAccount as ImAccounts', array('local' => 'id',
                                                          'foreign' => 'user_id'));

    $this->hasMany('sfUserBilling as Billings', array('local' => 'id',
                                                      'foreign' => 'user_id'));

    $this->hasMany('sfUserNote as Notes', array('local' => 'id',
                                                'foreign' => 'user_id'));

    $timestampable0 = new Doctrine_Template_Timestampable();
    $userstampable0 = new Userstampable();
    $this->actAs($timestampable0);
    $this->actAs($userstampable0);
  }
}