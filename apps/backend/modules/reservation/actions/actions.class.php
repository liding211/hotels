<?php
// auto-generated by sfDoctrineAdmin
// date: 2013/02/15 16:31:24
?>
<?php

/**
 * reservation actions.
 *
 * @package    sf_sandbox
 * @subpackage reservation
 * @author     Fabien Potencier <fabien.potencier@symfony-project.com>
 * @author     Olivier Verdier <Olivier.Verdier@gmail.com>
 * @version    SVN: $Id: actions.class.php 5639 2007-10-23 14:27:18Z Eric.Fredj $
 */
class reservationActions extends autoreservationActions{
    
    protected function addFiltersCriteria($q){
        parent::addFiltersCriteria($q);
        
        if(isset($this->filters['email']) && 
            $this->filters['email'] !== ''){
            
            $this->filters['client_name'] = preg_replace('/[ ]+/i', ' ', trim($this->filters['client_name']));
            $this->filters['client_name'] = preg_replace('/[^\w ]+/i', '', $this->filters['client_name']);

            $q->addWhere("HotelsReservation.HotelsClient.email like ?", array("%{$this->filters['email']}%"));
        }
        
        if (isset($this->filters['client_name']) && 
            $this->filters['client_name'] !== ''){
        
            $this->filters['client_name'] = preg_replace('/[ ]+/i', ' ', trim($this->filters['client_name']));
            $this->filters['client_name'] = preg_replace('/[^\w ]+/i', '', $this->filters['client_name']);

            $q->innerJoin("HotelsReservation.HotelsClient c");
            $q->addWhere("c.first_name like ? OR c.last_name like ?",  
                array("%{$this->filters['client_name']}%", "%{$this->filters['client_name']}%"));
        }
    }
    
    protected function updateHotelsReservationFromRequest(){
        
        $client_email = preg_replace('/[^\w@\.\-]+/i', '', 
            $this->getRequestParameter('client_email'));
        $client_id = preg_replace('/[^\d]+/', '', 
            $this->getRequestParameter('hotels_reservation[client_id]'));

        $client = Doctrine_Manager::connection()
            ->fetchOne('SELECT id FROM hotels_client WHERE email = ? AND id = ?'
                , array($client_email, $client_id));

        if($client === false){
            $this->setFlash('warning', 'No such client with specified e-mail');
            $this->redirect('reservation/edit?id=' . $this->getRequestParameter('id'));
        }
        else if(isset($client_id)){
            $this->hotels_reservation->set('client_id', $client_id);
        }

        parent::updateHotelsReservationFromRequest();
    }
    
    public function executeShow(){
        $reservation_id = (int) $this->getRequestParameter('id', 0);
        
        if(empty($reservation_id)){
            $this->setFlash('warning', 'Invalid reservation id');
            $this->redirect('reservation');
        }
        
        $this->hotels_reservation = Doctrine::getTable('HotelsReservation')->find($reservation_id);
        
        if(empty($this->hotels_reservation)){
            $this->setFlash('warning', 'Reservation with such id not exist');
            $this->redirect('reservation');
        }
    }
}
